
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-read_binary/load_shaft_result.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-read_binary_load_shaft_result.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-read_binary_load_shaft_result.py:


.. _ref_load_shaft_result:

Shaft Modal Analysis
~~~~~~~~~~~~~~~~~~~~

Visualize a shaft modal analysis

.. GENERATED FROM PYTHON SOURCE LINES 10-17

.. code-block:: default

    # sphinx_gallery_thumbnail_number = 6

    from ansys.mapdl.reader import examples

    # Download an example shaft modal analysis result file
    shaft = examples.download_shaft_modal()








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Mesh is stored within the result object

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    print(shaft.mesh)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ANSYS Mesh
      Number of Nodes:              27132
      Number of Elements:           25051
      Number of Element Types:      6
      Number of Node Components:    4
      Number of Element Components: 3





.. GENERATED FROM PYTHON SOURCE LINES 22-23

...and contains a VTK unstructured grid

.. GENERATED FROM PYTHON SOURCE LINES 23-25

.. code-block:: default

    print(shaft.mesh._grid)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    None




.. GENERATED FROM PYTHON SOURCE LINES 26-27

Plot the shaft

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: default

    cpos = shaft.plot()

    # list shaft node components



.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_001.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    print(shaft.element_components.keys())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    dict_keys(['EBC1', 'EBC2', 'SHAFT_MESH'])




.. GENERATED FROM PYTHON SOURCE LINES 34-37

Plot a node component

This camera angle was saved interactively from ``shaft.plot``

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: default

    cpos = [(-115.35773008378118, 285.36602704380107, -393.9029392590675),
            (126.12852038381345, 0.2179228023931401, 5.236408799851887),
            (0.37246222812978824, 0.8468424028124546, 0.37964435122285495)]
    shaft.plot(element_components=['SHAFT_MESH'], cpos=cpos)
    # get cpos from cpos = shaft.plot()





.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_002.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 45-46

Plot a node component as a wireframe

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: default

    shaft.plot(element_components=['SHAFT_MESH'], cpos=cpos, style='wireframe',
               lighting=False)





.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_003.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 51-52

Plot the shaft with edges and with a blue color

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: default

    shaft.plot(show_edges=True, color='cyan')




.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_004.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-56

Plot the shaft without lighting but with edges and with a blue color

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default

    shaft.plot(lighting=False, show_edges=True, color='cyan')





.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_005.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 60-61

plot a mode shape without contours using the "bwr" color map

.. GENERATED FROM PYTHON SOURCE LINES 61-66

.. code-block:: default

    shaft.plot_nodal_solution(9, element_components=['SHAFT_MESH'],
                              show_displacement=True, cmap='bwr',
                              displacement_factor=0.3, stitle=None,
                              overlay_wireframe=True, cpos=cpos)




.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_006.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/pyvista/plotting/plotting.py:1948: PyvistaDeprecationWarning: 
    "stitle" is a depreciated keyword and will be removed in a future
    release.

    Use ``scalar_bar_args`` instead.  For example:

    scalar_bar_args={'title': 'Scalar Bar Title'}

      warnings.warn(USE_SCALAR_BAR_ARGS, PyvistaDeprecationWarning)




.. GENERATED FROM PYTHON SOURCE LINES 67-68

plot a mode shape with contours and the default colormap

.. GENERATED FROM PYTHON SOURCE LINES 68-73

.. code-block:: default

    shaft.plot_nodal_solution(1, element_components=['SHAFT_MESH'],
                              n_colors=10, show_displacement=True,
                              displacement_factor=1, stitle=None,
                              overlay_wireframe=True, cpos=cpos)




.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_007.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.9.10/x64/lib/python3.9/site-packages/pyvista/plotting/plotting.py:1948: PyvistaDeprecationWarning: 
    "stitle" is a depreciated keyword and will be removed in a future
    release.

    Use ``scalar_bar_args`` instead.  For example:

    scalar_bar_args={'title': 'Scalar Bar Title'}

      warnings.warn(USE_SCALAR_BAR_ARGS, PyvistaDeprecationWarning)




.. GENERATED FROM PYTHON SOURCE LINES 74-78

Animate a mode of a component the shaft

Set ``loop==True`` to plot continuously.
Disable ``movie_filename`` and increase ``n_frames`` for a smoother plot

.. GENERATED FROM PYTHON SOURCE LINES 78-83

.. code-block:: default

    shaft.animate_nodal_solution(5, element_components='SHAFT_MESH',
                                 comp='norm', displacement_factor=1,
                                 show_edges=True, cpos=cpos,
                                 loop=False, movie_filename='demo.gif',
                                 n_frames=30)



.. image-sg:: /examples/00-read_binary/images/sphx_glr_load_shaft_result_008.png
   :alt: load shaft result
   :srcset: /examples/00-read_binary/images/sphx_glr_load_shaft_result_008.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Rendering animation:   0%|          | 0/30 [00:00<?, ?it/s]    Rendering animation:   3%|3         | 1/30 [00:00<00:09,  3.03it/s]    Rendering animation:   7%|6         | 2/30 [00:00<00:07,  3.94it/s]    Rendering animation:  10%|#         | 3/30 [00:00<00:06,  4.32it/s]    Rendering animation:  13%|#3        | 4/30 [00:00<00:05,  4.41it/s]    Rendering animation:  17%|#6        | 5/30 [00:01<00:05,  4.54it/s]    Rendering animation:  20%|##        | 6/30 [00:01<00:05,  4.65it/s]    Rendering animation:  23%|##3       | 7/30 [00:01<00:04,  4.73it/s]    Rendering animation:  27%|##6       | 8/30 [00:01<00:04,  4.80it/s]    Rendering animation:  30%|###       | 9/30 [00:01<00:04,  4.81it/s]    Rendering animation:  33%|###3      | 10/30 [00:02<00:04,  4.79it/s]    Rendering animation:  37%|###6      | 11/30 [00:02<00:03,  4.81it/s]    Rendering animation:  40%|####      | 12/30 [00:02<00:03,  4.83it/s]    Rendering animation:  43%|####3     | 13/30 [00:02<00:03,  4.86it/s]    Rendering animation:  47%|####6     | 14/30 [00:03<00:03,  4.85it/s]    Rendering animation:  50%|#####     | 15/30 [00:03<00:03,  4.86it/s]    Rendering animation:  53%|#####3    | 16/30 [00:03<00:02,  4.90it/s]    Rendering animation:  57%|#####6    | 17/30 [00:03<00:02,  4.87it/s]    Rendering animation:  60%|######    | 18/30 [00:03<00:02,  4.79it/s]    Rendering animation:  63%|######3   | 19/30 [00:04<00:02,  4.82it/s]    Rendering animation:  67%|######6   | 20/30 [00:04<00:02,  4.86it/s]    Rendering animation:  70%|#######   | 21/30 [00:04<00:01,  4.86it/s]    Rendering animation:  73%|#######3  | 22/30 [00:04<00:01,  4.83it/s]    Rendering animation:  77%|#######6  | 23/30 [00:04<00:01,  4.87it/s]    Rendering animation:  80%|########  | 24/30 [00:05<00:01,  4.84it/s]    Rendering animation:  83%|########3 | 25/30 [00:05<00:01,  4.85it/s]    Rendering animation:  87%|########6 | 26/30 [00:05<00:00,  4.83it/s]    Rendering animation:  90%|######### | 27/30 [00:05<00:00,  4.70it/s]    Rendering animation:  93%|#########3| 28/30 [00:05<00:00,  4.73it/s]    Rendering animation:  97%|#########6| 29/30 [00:06<00:00,  4.76it/s]    Rendering animation: 100%|##########| 30/30 [00:06<00:00,  4.74it/s]    Rendering animation: 100%|##########| 30/30 [00:06<00:00,  4.60it/s]

    [(-115.35773008378118, 285.36602704380107, -393.9029392590675),
     (126.12852038381345, 0.2179228023931401, 5.236408799851887),
     (0.3724622281297882, 0.8468424028124544, 0.37964435122285484)]




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.123 seconds)


.. _sphx_glr_download_examples_00-read_binary_load_shaft_result.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: load_shaft_result.py <load_shaft_result.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: load_shaft_result.ipynb <load_shaft_result.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
